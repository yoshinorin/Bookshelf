@page "/books"
@using System.Text.Json
@using bookshelf.Domains.Books
@inject HttpClient Http

<PageTitle>Books</PageTitle>

<p>This component demonstrates fetching data from the server.</p>

@if (books == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <FluentDataGrid Id="booksGrid" Items="@books" GridTemplateColumns="1fr 1fr 1fr 2fr" TGridItem=Book>
        <PropertyColumn Title="Title" Property="@(c => c!.Title)" Sortable="true" Align="Align.Start" />
        <PropertyColumn Title="Genre" Property="@(c => c!.Genre)" Sortable="true" Align="Align.Center" />
        <PropertyColumn Title="Url" Property="@(c => c!.Url)" Sortable="true" Align="Align.Center" />
        <PropertyColumn Title="ImageUrl" Property="@(c => c!.ImageUrl)" Sortable="true" Align="Align.Center" />
        <PropertyColumn Title="ReadAt" Property="@(c => c!.ReadAt)" Sortable="true" Align="Align.End" />
    </FluentDataGrid>
}

@code {
    private IQueryable<Book>? books;

    protected override async Task OnInitializedAsync()
    {
        books = (await Http.GetFromJsonAsync<List<Book>>("data/books.json"))!.AsQueryable();
    }
}
